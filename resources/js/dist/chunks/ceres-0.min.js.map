{"version":3,"sources":["webpack:///./resources/js/src/app/mixins/buttonSizeProperty.mixin.js","webpack:///./resources/js/src/app/components/item/QuantityInput.vue","webpack:///resources/js/src/app/components/item/QuantityInput.vue","webpack:///./resources/js/src/app/components/item/QuantityInput.vue?2b01","webpack:///./resources/js/src/app/components/item/QuantityInput.vue?8dc2","webpack:///./resources/js/src/app/components/basket/AddToBasket.vue","webpack:///./resources/js/src/app/components/item/QuantityInputSingleItem.vue","webpack:///resources/js/src/app/components/item/QuantityInputSingleItem.vue","webpack:///./resources/js/src/app/components/item/QuantityInputSingleItem.vue?0a49","webpack:///./resources/js/src/app/components/item/QuantityInputSingleItem.vue?13f9","webpack:///resources/js/src/app/components/basket/AddToBasket.vue","webpack:///./resources/js/src/app/components/basket/AddToBasket.vue?d882","webpack:///./resources/js/src/app/components/basket/AddToBasket.vue?72a9"],"names":["BUTTON_SIZES","LEGACY_CLASS_MAP","ButtonSizePropertyMixin","props","buttonSize","type","String","default","validator","value","concat","_toConsumableArray","Object","keys","indexOf","computed","buttonSizeClass","hasOwnProperty","this","render","_vm","_c","_self","staticClass","directives","name","rawName","isMaximum","compMax","expression","class","disabled","waiting","useAppearance","attrs","title","maximumHint","$translate","on","click","$event","increaseValue","_v","ref","domProps","displayValue","change","setValue","target","isMinimum","minimumHint","decreaseValue","_withStripped","Number","required","timeout","min","max","interval","Boolean","variationId","insideBasket","data","compValue","compMin","compInterval","compDecimals","onValueChanged","created","_this","defaultValue","minDecimals","floatLength","intervalDecimals","Math","debounce","$emit","isNullOrUndefined","fetchQuantityFromBasket","_objectSpread","variationBasketQuantity","_this2","itemSetVariationId","basketObject","$store","state","basket","items","find","variations","quantity","isDefined","$options","filters","numberFormat","possibleNumbers","numbers","i","push","displayValue2","get","set","parseFloat","itemSetId","getters","variation","id","mapState","basketItems","watch","newValue","handler","oldValue","deep","newInterval","methods","formatFloat","diff","replace","App","decimalSeparator","isNaN","limit","$refs","quantityInputField","component","showQuantity","useLargeScale","canBeAddedToBasket","isLoading","addToBasket","icon","loading","_e","directToItem","xmlns","width","height","viewBox","fill","stroke","d","$ceres","isItemView","fromSingleItemComp","minimumQuantity","maximumQuantity","intervalQuantity","isSalable","allVariationsSelected","updateQuantity","handleButtonState","buttonLockState","buttonClasses","style","paddingInlineStyles","_f","_s","hasPrice","tooltipText","isWishList","role","src","alt","options","model","callback","$$v","_objectSpread2","_defineProperty","NotificationService","require","extractPropertiesAndSurcharge","orderProperties","totalSurcharge","orderParams","forEach","orderProperty","property","valueType","slice","substr","length","surcharge","propertyId","names","mixins","components","QuantityInput","QuantityInputSingleItem","itemUrl","hasChildren","Array","hasOrderProperties","hasRequiredOrderProperty","hasGraduatedPrice","paddingClasses","propQuantity","itemType","fromSingleItem","inject","itemId","$props","isSet","documents","item","requiresProperties","config","requireOrderProperties","filter","isShownOnItemPage","classes","split","hasAvailableVariations","variationOrderQuantity","variationMissingProperties","variationSelect","some","isVariationSelected","isAddToBasketLoading","isSetLoading","isBasketLoading","dispatch","undefined","showMissingPropertiesError","commit","orderParamsAndSurcharge","basketItemOrderParams","totalOrderParamsMarkup","setComponents","setComponentIds","setComponent","setComponentOrderParamsAndSurcharge","properties","prop","isOderProperty","then","response","document","dispatchEvent","CustomEvent","detail","error","ExceptionMap","exceptionCode","toString","placeholder","closeAfter","_step","errorMsgContent","_iterator","_createForOfIteratorHelper","map","s","n","done","err","e","f","navigateTo"],"mappings":"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","file":"chunks/ceres-0.min.js","sourcesContent":["const BUTTON_SIZES = [\"btn-sm\", \"btn-lg\"];\n\nconst LEGACY_CLASS_MAP = {\n    \"sm\": \"btn-sm\",\n    \"md\": \"\",\n    \"lg\": \"btn-lg\"\n};\n\nexport const ButtonSizePropertyMixin =\n{\n    props: {\n        buttonSize:\n        {\n            type: [String, null],\n            default: null,\n            validator: value =>\n            {\n                return [\n                    \"\",\n                    ...BUTTON_SIZES,\n                    ...Object.keys(LEGACY_CLASS_MAP)\n                ].indexOf(value) !== -1;\n            }\n        }\n    },\n\n    computed: {\n        buttonSizeClass()\n        {\n            if (LEGACY_CLASS_MAP.hasOwnProperty(this.buttonSize))\n            {\n                return LEGACY_CLASS_MAP[this.buttonSize];\n            }\n\n            return this.buttonSize;\n        }\n    }\n};\n","var render = function render() {\n  var _vm = this,\n    _c = _vm._self._c\n  return _c(\"div\", { staticClass: \"qty-box d-flex h-100\" }, [\n    _c(\"div\", { staticClass: \"qty-btn-container d-flex flex-column\" }, [\n      _c(\n        \"button\",\n        {\n          directives: [\n            {\n              name: \"tooltip\",\n              rawName: \"v-tooltip\",\n              value: _vm.isMaximum && _vm.compMax !== 0,\n              expression: \"isMaximum && compMax !== 0\",\n            },\n          ],\n          staticClass:\n            \"btn qty-btn flex-fill d-flex justify-content-center p-0\",\n          class: {\n            disabled: _vm.isMaximum || _vm.waiting,\n            \"btn-appearance\": _vm.useAppearance,\n          },\n          attrs: {\n            \"data-toggle\": \"tooltip\",\n            \"data-placement\": \"top\",\n            \"data-testing\": \"quantity-btn-increase\",\n            title: _vm.maximumHint,\n            \"aria-label\": _vm.$translate(\n              \"Ceres::Template.itemQuantityInputIncrease\"\n            ),\n          },\n          on: {\n            click: function ($event) {\n              return _vm.increaseValue()\n            },\n          },\n        },\n        [\n          _c(\"i\", {\n            staticClass: \"fa fa-plus default-float\",\n            attrs: { \"aria-hidden\": \"true\" },\n          }),\n        ]\n      ),\n      _vm._v(\" \"),\n      _c(\"input\", {\n        ref: \"quantityInputField\",\n        staticClass: \"qty-input text-center\",\n        attrs: {\n          type: \"text\",\n          disabled: _vm.waiting,\n          \"aria-label\": _vm.$translate(\"Ceres::Template.itemQuantityInput\"),\n        },\n        domProps: { value: _vm.displayValue },\n        on: {\n          change: function ($event) {\n            return _vm.setValue($event.target.value)\n          },\n        },\n      }),\n      _vm._v(\" \"),\n      _c(\n        \"button\",\n        {\n          directives: [\n            {\n              name: \"tooltip\",\n              rawName: \"v-tooltip\",\n              value: _vm.isMinimum && _vm.compMax !== 0,\n              expression: \"isMinimum && compMax !== 0\",\n            },\n          ],\n          staticClass:\n            \"btn qty-btn flex-fill d-flex justify-content-center p-0\",\n          class: {\n            disabled: _vm.isMinimum || _vm.waiting,\n            \"btn-appearance\": _vm.useAppearance,\n          },\n          attrs: {\n            \"data-toggle\": \"tooltip\",\n            \"data-placement\": \"bottom\",\n            \"data-testing\": \"quantity-btn-decrease\",\n            title: _vm.minimumHint,\n            \"aria-label\": _vm.$translate(\n              \"Ceres::Template.itemQuantityInputDecrease\"\n            ),\n          },\n          on: {\n            click: function ($event) {\n              return _vm.decreaseValue()\n            },\n          },\n        },\n        [\n          _c(\"i\", {\n            staticClass: \"fa fa-minus default-float\",\n            attrs: { \"aria-hidden\": \"true\" },\n          }),\n        ]\n      ),\n    ]),\n  ])\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","<template>\n  <div class=\"qty-box d-flex h-100\">\n    <div class=\"qty-btn-container d-flex flex-column\">\n      <button\n        class=\"btn qty-btn flex-fill d-flex justify-content-center p-0\"\n        @click=\"increaseValue()\"\n        :class=\"{\n          disabled: isMaximum || waiting,\n          'btn-appearance': useAppearance,\n        }\"\n        v-tooltip=\"isMaximum && compMax !== 0\"\n        data-toggle=\"tooltip\"\n        data-placement=\"top\"\n        data-testing=\"quantity-btn-increase\"\n        :title=\"maximumHint\"\n        :aria-label=\"$translate('Ceres::Template.itemQuantityInputIncrease')\"\n      >\n        <i class=\"fa fa-plus default-float\" aria-hidden=\"true\"></i>\n      </button>\n      <input\n        class=\"qty-input text-center\"\n        type=\"text\"\n        :value=\"displayValue\"\n        @change=\"setValue($event.target.value)\"\n        :disabled=\"waiting\"\n        ref=\"quantityInputField\"\n        :aria-label=\"$translate('Ceres::Template.itemQuantityInput')\"\n      />\n\n      <button\n        class=\"btn qty-btn flex-fill d-flex justify-content-center p-0\"\n        @click=\"decreaseValue()\"\n        :class=\"{\n          disabled: isMinimum || waiting,\n          'btn-appearance': useAppearance,\n        }\"\n        v-tooltip=\"isMinimum && compMax !== 0\"\n        data-toggle=\"tooltip\"\n        data-placement=\"bottom\"\n        data-testing=\"quantity-btn-decrease\"\n        :title=\"minimumHint\"\n        :aria-label=\"$translate('Ceres::Template.itemQuantityInputDecrease')\"\n      >\n        <i class=\"fa fa-minus default-float\" aria-hidden=\"true\"></i>\n      </button>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { floatLength, formatFloat, limit } from \"../../helper/number\";\nimport { defaultValue, isDefined, isNullOrUndefined } from \"../../helper/utils\";\nimport { debounce } from \"../../helper/debounce\";\nimport { mapState } from \"vuex\";\n\nexport default {\n  name: \"quantity-input\",\n\n  props: {\n    value: {\n      type: Number,\n      required: true,\n    },\n    timeout: {\n      type: Number,\n      required: false,\n      default: 500,\n    },\n    min: {\n      type: Number,\n      required: false,\n      default: 0,\n    },\n    max: {\n      type: Number,\n      required: false,\n    },\n    interval: {\n      type: Number,\n      required: false,\n      default: 1,\n    },\n    waiting: {\n      type: Boolean,\n      required: false,\n    },\n    variationId: {\n      type: Number,\n      required: false,\n    },\n    insideBasket: {\n      type: Boolean,\n      required: false,\n      default: false,\n    },\n    useAppearance: Boolean,\n  },\n\n  data() {\n    return {\n      compValue: this.value,\n      compMin: this.min,\n      compMax: this.max,\n      compInterval: this.interval,\n      compDecimals: 0,\n      onValueChanged: null,\n    };\n  },\n\n  created() {\n    this.compInterval = defaultValue(this.compInterval, 1);\n    this.compInterval = this.compInterval === 0 ? 1 : this.compInterval;\n\n    const minDecimals = floatLength(this.min);\n    const intervalDecimals = floatLength(this.compInterval);\n\n    this.compDecimals = Math.max(minDecimals, intervalDecimals);\n\n    this.onValueChanged = debounce(() => {\n      this.$emit(\"quantity-change\", this.compValue);\n    }, defaultValue(this.timeout, 500));\n\n    if (!isNullOrUndefined(this.variationId)) {\n      this.fetchQuantityFromBasket();\n    }\n  },\n\n  computed: {\n    variationBasketQuantity() {\n      if (isNullOrUndefined(this.variationId)) {\n        return 0;\n      }\n\n      if (\n        this.itemSetVariationId <= 0 ||\n        this.variationId === this.itemSetVariationId\n      ) {\n        const basketObject = this.$store.state.basket.items.find(\n          (variations) => variations.variationId === this.variationId\n        );\n\n        return basketObject ? basketObject.quantity : 0;\n      }\n\n      return 0;\n    },\n\n    isMinimum() {\n      return (\n        isDefined(this.compMin) &&\n        this.compValue - this.compInterval < this.compMin\n      );\n    },\n\n    isMaximum() {\n      return (\n        isDefined(this.compMax) &&\n        this.compValue + this.compInterval > this.compMax\n      );\n    },\n\n    minimumHint() {\n      return this.$translate(\"Ceres::Template.singleItemQuantityMin\", {\n        min: this.$options.filters.numberFormat(this.compMin),\n      });\n    },\n\n    maximumHint() {\n      return this.$translate(\"Ceres::Template.singleItemQuantityMax\", {\n        max: this.$options.filters.numberFormat(this.max),\n      });\n    },\n\n    displayValue() {\n      return this.$options.filters.numberFormat(this.compValue);\n    },\n    possibleNumbers() {\n      const numbers = [];\n      for (let i = this.compMin; i <= this.compMax; i += this.compInterval) {\n        numbers.push(i);\n      }\n      return numbers;\n    },\n\n    displayValue2: {\n      get() {\n        return this.$options.filters.numberFormat(this.compValue);\n      },\n      set(value) {\n        this.setValue(parseFloat(value));\n      },\n    },\n\n    itemSetVariationId() {\n      if (this.$store.state.items.itemSetId > 0) {\n        return this.$store.getters[\n          `${this.$store.state.items.itemSetId}/currentItemVariation`\n        ].variation.id;\n      }\n\n      return 0;\n    },\n\n    ...mapState({\n      basketItems: (state) => state.basket.items,\n    }),\n  },\n\n  watch: {\n    variationId(newValue) {\n      if (isDefined(newValue)) {\n        this.fetchQuantityFromBasket();\n      }\n    },\n\n    basketItems: {\n      handler(newValue, oldValue) {\n        if (isDefined(this.variationId)) {\n          this.fetchQuantityFromBasket();\n        }\n      },\n      deep: true,\n    },\n\n    min(newValue) {\n      this.compMin = newValue;\n      this.fetchQuantityFromBasket();\n    },\n\n    max(newValue) {\n      this.compMax = newValue;\n      this.fetchQuantityFromBasket();\n    },\n\n    value(newValue, oldValue) {\n      if (newValue !== oldValue) {\n        this.setValue(newValue);\n      }\n    },\n\n    interval(newInterval) {\n      this.compInterval = defaultValue(newInterval, 1);\n    },\n  },\n\n  methods: {\n    increaseValue() {\n      const newValue = formatFloat(\n        this.compValue + this.compInterval,\n        this.compDecimals\n      );\n\n      if (\n        (isNullOrUndefined(this.compMax) || newValue <= this.compMax) &&\n        !this.waiting\n      ) {\n        this.setValue(newValue);\n      }\n    },\n\n    decreaseValue() {\n      const newValue = formatFloat(\n        this.compValue - this.compInterval,\n        this.compDecimals\n      );\n\n      if (\n        (isNullOrUndefined(this.compMin) || newValue >= this.compMin) &&\n        !this.waiting\n      ) {\n        this.setValue(newValue);\n      }\n    },\n\n    setValue(value) {\n      // consider the configured decimal seperator (if the input is typed in the input field)\n      if (typeof value === \"string\") {\n        value = value.replace(App.decimalSeparator || \",\", \".\");\n      }\n\n      value = parseFloat(value);\n      if (isNaN(value)) {\n        value = defaultValue(this.compMin, 1);\n      }\n\n      // limit new value to min/ max value\n      value = limit(value, this.compMin, this.compMax);\n\n      // make sure, new value is an even multiple of interval\n      let diff;\n      if (this.variationBasketQuantity === 0 && this.min !== 0) {\n        diff = formatFloat(\n          (value - this.min) % this.compInterval,\n          this.compDecimals,\n          true\n        );\n      } else {\n        diff = formatFloat(value % this.compInterval, this.compDecimals, true);\n      }\n\n      if (diff > 0 && diff !== this.compInterval) {\n        if (diff < this.compInterval / 2) {\n          value -= diff;\n        } else {\n          value += this.compInterval - diff;\n        }\n        value = limit(value, this.compMin, this.compMax);\n      }\n\n      // cut fraction\n      value = formatFloat(value, this.compDecimals);\n\n      if (value !== this.compValue) {\n        this.compValue = value;\n        this.onValueChanged();\n      } else if (!isNullOrUndefined(this.$refs.quantityInputField)) {\n        this.$refs.quantityInputField.value = this.displayValue;\n      }\n    },\n\n    fetchQuantityFromBasket() {\n      if (\n        !isNullOrUndefined(this.min) &&\n        this.variationBasketQuantity >= this.min &&\n        this.variationBasketQuantity !== 0\n      ) {\n        // set the minimum value to the interval, if the item is already in the basket\n        this.compMin = this.compInterval;\n      } else if (this.variationBasketQuantity === 0) {\n        // reset the minimum, when item is not in the basket\n        this.compMin = this.min;\n      }\n\n      if (!isNullOrUndefined(this.max)) {\n        // decrease maximum quantity by quantity of variations already in basket\n        this.compMax = this.max - this.variationBasketQuantity;\n\n        if (this.variationBasketQuantity + this.compInterval > this.max) {\n          this.compMin = 0;\n          this.compMax = 0;\n          this.$emit(\"out-of-stock\", true);\n        } else {\n          this.$emit(\"out-of-stock\", false);\n        }\n      } else {\n        this.$emit(\"out-of-stock\", false);\n      }\n\n      this.setValue(this.compMin);\n    },\n  },\n};\n</script>","import mod from \"-!../../../../../../node_modules/babel-loader/lib/index.js!../../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./QuantityInput.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../../node_modules/babel-loader/lib/index.js!../../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./QuantityInput.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./QuantityInput.vue?vue&type=template&id=2b515bda&\"\nimport script from \"./QuantityInput.vue?vue&type=script&lang=js&\"\nexport * from \"./QuantityInput.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function render() {\n  var _vm = this,\n    _c = _vm._self._c\n  return _c(\"div\", [\n    !_vm.showQuantity && _vm.useLargeScale && _vm.canBeAddedToBasket\n      ? _c(\n          \"div\",\n          {\n            directives: [{ name: \"tooltip\", rawName: \"v-tooltip\" }],\n            staticClass: \"add-to-basket-lg-container d-none d-lg-block\",\n            class: { \"no-pointer-events\": _vm.isLoading },\n            attrs: {\n              \"data-toggle\": \"tooltip\",\n              \"data-placement\": \"top\",\n              title: _vm.$translate(\"Ceres::Template.singleItemAddToBasket\"),\n            },\n            on: {\n              click: function ($event) {\n                return _vm.addToBasket()\n              },\n            },\n          },\n          [\n            _c(\"icon\", {\n              staticClass: \"fa-lg mobile-icon-right\",\n              attrs: { icon: \"cart-plus\", loading: _vm.isLoading },\n            }),\n          ],\n          1\n        )\n      : _vm._e(),\n    _vm._v(\" \"),\n    !_vm.showQuantity && _vm.useLargeScale && !_vm.canBeAddedToBasket\n      ? _c(\n          \"div\",\n          {\n            directives: [{ name: \"tooltip\", rawName: \"v-tooltip\" }],\n            staticClass: \"add-to-basket-lg-container d-none d-lg-block\",\n            attrs: {\n              \"data-toggle\": \"tooltip\",\n              \"data-placement\": \"top\",\n              title: _vm.$translate(\"Ceres::Template.itemShowItem\"),\n            },\n            on: {\n              click: function ($event) {\n                return _vm.directToItem()\n              },\n            },\n          },\n          [\n            _c(\n              \"svg\",\n              {\n                attrs: {\n                  xmlns: \"http://www.w3.org/2000/svg\",\n                  width: \"23\",\n                  height: \"23\",\n                  viewBox: \"0 0 24 24\",\n                  fill: \"none\",\n                  stroke: \"#ffffff\",\n                  \"stroke-width\": \"1.5\",\n                  \"stroke-linecap\": \"round\",\n                  \"stroke-linejoin\": \"round\",\n                },\n              },\n              [_c(\"path\", { attrs: { d: \"M5 12h13M12 5l7 7-7 7\" } })]\n            ),\n          ]\n        )\n      : _vm._e(),\n    _vm._v(\" \"),\n    _vm.showQuantity && !_vm.useLargeScale\n      ? _c(\n          \"div\",\n          {\n            staticClass: \"d-inline\",\n            class: { \"d-lg-none\": !_vm.$ceres.isItemView },\n          },\n          [\n            _c(\"div\", { staticClass: \"add-to-basket-container\" }, [\n              !_vm.fromSingleItemComp\n                ? _c(\n                    \"div\",\n                    { staticClass: \"quantity-input-container\" },\n                    [\n                      _c(\"quantity-input\", {\n                        attrs: {\n                          value: _vm.quantity,\n                          timeout: 0,\n                          min: _vm.minimumQuantity,\n                          max: _vm.maximumQuantity,\n                          interval: _vm.intervalQuantity,\n                          \"variation-id\": _vm.variationId,\n                          waiting:\n                            _vm.isLoading ||\n                            !_vm.isSalable ||\n                            !_vm.allVariationsSelected,\n                        },\n                        on: {\n                          \"quantity-change\": _vm.updateQuantity,\n                          \"out-of-stock\": _vm.handleButtonState,\n                        },\n                      }),\n                    ],\n                    1\n                  )\n                : _c(\n                    \"div\",\n                    { staticClass: \"quantity-input-container\" },\n                    [\n                      _c(\"quantity-input-single-item\", {\n                        attrs: {\n                          value: _vm.quantity,\n                          timeout: 0,\n                          min: _vm.minimumQuantity,\n                          max: _vm.maximumQuantity,\n                          interval: _vm.intervalQuantity,\n                          \"variation-id\": _vm.variationId,\n                          waiting:\n                            _vm.isLoading ||\n                            !_vm.isSalable ||\n                            !_vm.allVariationsSelected,\n                        },\n                        on: {\n                          \"quantity-change\": _vm.updateQuantity,\n                          \"out-of-stock\": _vm.handleButtonState,\n                        },\n                      }),\n                    ],\n                    1\n                  ),\n              _vm._v(\" \"),\n              !_vm.allVariationsSelected || !_vm.isSalable\n                ? _c(\n                    \"button\",\n                    {\n                      directives: [{ name: \"tooltip\", rawName: \"v-tooltip\" }],\n                      staticClass:\n                        \"btn btn-block btn-primary btn-appearance btn-lg disabled\",\n                      class: _vm.buttonClasses,\n                      style: _vm.paddingInlineStyles,\n                      attrs: {\n                        \"data-toggle\": \"tooltip\",\n                        \"data-placement\": \"top\",\n                        title: _vm.tooltipText,\n                      },\n                    },\n                    [\n                      _c(\"i\", {\n                        staticClass: \"fa fa-shopping-cart\",\n                        attrs: { \"aria-hidden\": \"true\" },\n                      }),\n                      _vm._v(\n                        \"\\n        \" +\n                          _vm._s(\n                            _vm.$translate(\n                              \"Ceres::Template.singleItemAddToBasket\"\n                            )\n                          ) +\n                          \"\\n      \"\n                      ),\n                    ]\n                  )\n                : !_vm.buttonLockState\n                ? _c(\n                    \"button\",\n                    {\n                      staticClass:\n                        \"btn btn-block btn-primary btn-lg btn-appearance\",\n                      class: _vm.buttonClasses,\n                      style: _vm.paddingInlineStyles,\n                      attrs: { disabled: _vm.isLoading || !_vm.hasPrice },\n                      on: {\n                        click: function ($event) {\n                          return _vm.addToBasket()\n                        },\n                      },\n                    },\n                    [\n                      _c(\"icon\", {\n                        attrs: {\n                          icon: \"shopping-cart\",\n                          loading: _vm.isLoading,\n                        },\n                      }),\n                      _vm._v(\n                        \"\\n        \" +\n                          _vm._s(\n                            _vm.$translate(\n                              \"Ceres::Template.singleItemAddToBasket\"\n                            )\n                          ) +\n                          \"\\n      \"\n                      ),\n                    ],\n                    1\n                  )\n                : _c(\n                    \"button\",\n                    {\n                      directives: [{ name: \"tooltip\", rawName: \"v-tooltip\" }],\n                      staticClass:\n                        \"btn btn-block btn-primary btn-lg btn-appearance disabled\",\n                      class: _vm.buttonClasses,\n                      style: _vm.paddingInlineStyles,\n                      attrs: {\n                        \"data-toggle\": \"tooltip\",\n                        \"data-placement\": \"top\",\n                        title: _vm._f(\"translate\")(\n                          \"Ceres::Template.singleItemQuantityMax\",\n                          { max: _vm.maximumQuantity }\n                        ),\n                      },\n                    },\n                    [\n                      _c(\"icon\", {\n                        attrs: {\n                          icon: \"shopping-cart\",\n                          waiting: _vm.isLoading,\n                        },\n                      }),\n                      _vm._v(\n                        \"\\n        \" +\n                          _vm._s(\n                            _vm.$translate(\n                              \"Ceres::Template.singleItemAddToBasket\"\n                            )\n                          ) +\n                          \"\\n      \"\n                      ),\n                    ],\n                    1\n                  ),\n            ]),\n          ]\n        )\n      : _vm._e(),\n    _vm._v(\" \"),\n    !_vm.showQuantity && !_vm.useLargeScale\n      ? _c(\n          \"div\",\n          { staticClass: \"d-inline\", class: { \"d-lg-none\": !_vm.isWishList } },\n          [\n            _c(\n              \"div\",\n              {\n                staticClass: \"btn-group\",\n                attrs: { role: \"group\", \"aria-label\": \"Thumb Control\" },\n              },\n              [\n                _vm.canBeAddedToBasket\n                  ? _c(\n                      \"button\",\n                      {\n                        staticClass:\n                          \"btn btn-secondary btn-appearance mobile-width-button basket\",\n                        class: { \"no-pointer-events\": _vm.isLoading },\n                        attrs: { type: \"button\" },\n                        on: {\n                          click: function ($event) {\n                            return _vm.addToBasket()\n                          },\n                        },\n                      },\n                      [\n                        _c(\"img\", {\n                          attrs: {\n                            src: \"https://cdn02.plentymarkets.com/ocqgl0v083vy/frontend/website_relaunch/icons/basket_icon.svg\",\n                            alt: \"warenkorb\",\n                          },\n                        }),\n                        _vm._v(\n                          \"\\n        \" +\n                            _vm._s(\n                              _vm.$translate(\n                                \"Ceres::Template.singleItemAddToBasket\"\n                              )\n                            ) +\n                            \"\\n      \"\n                        ),\n                      ]\n                    )\n                  : _c(\n                      \"button\",\n                      {\n                        staticClass:\n                          \"btn btn-secondary btn-appearance mobile-width-button not-basket\",\n                        attrs: { type: \"button\" },\n                        on: {\n                          click: function ($event) {\n                            return _vm.directToItem()\n                          },\n                        },\n                      },\n                      [\n                        _c(\n                          \"svg\",\n                          {\n                            attrs: {\n                              xmlns: \"http://www.w3.org/2000/svg\",\n                              width: \"23\",\n                              height: \"23\",\n                              viewBox: \"0 0 24 24\",\n                              fill: \"none\",\n                              stroke: \"#ffffff\",\n                              \"stroke-width\": \"1.5\",\n                              \"stroke-linecap\": \"round\",\n                              \"stroke-linejoin\": \"round\",\n                            },\n                          },\n                          [\n                            _c(\"path\", {\n                              attrs: { d: \"M5 12h13M12 5l7 7-7 7\" },\n                            }),\n                          ]\n                        ),\n                        _vm._v(\n                          \"\\n        \" +\n                            _vm._s(\n                              _vm.$translate(\"Ceres::Template.itemShowItem\")\n                            ) +\n                            \"\\n      \"\n                        ),\n                      ]\n                    ),\n              ]\n            ),\n          ]\n        )\n      : _vm._e(),\n  ])\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","var render = function render() {\n  var _vm = this,\n    _c = _vm._self._c\n  return _c(\"div\", { staticClass: \"single-item-in\" }, [\n    _vm.compMax !== null\n      ? _c(\n          \"div\",\n          { staticClass: \"qty-box d-flex h-100\" },\n          [\n            _c(\"b-form-select\", {\n              ref: \"quantityInputField\",\n              staticClass: \"qty-input text-center\",\n              attrs: {\n                options: _vm.possibleNumbers,\n                disabled: _vm.waiting,\n                \"aria-label\": _vm.$translate(\n                  \"Ceres::Template.itemQuantityInput\"\n                ),\n              },\n              on: {\n                change: function ($event) {\n                  return _vm.setValue($event)\n                },\n              },\n              model: {\n                value: _vm.compValue,\n                callback: function ($$v) {\n                  _vm.compValue = $$v\n                },\n                expression: \"compValue\",\n              },\n            }),\n          ],\n          1\n        )\n      : _c(\"div\", { staticClass: \"qty-box d-flex h-100\" }, [\n          _c(\"div\", { staticClass: \"qty-btn-container d-flex flex-column\" }, [\n            _c(\n              \"button\",\n              {\n                directives: [\n                  {\n                    name: \"tooltip\",\n                    rawName: \"v-tooltip\",\n                    value: _vm.isMaximum && _vm.compMax !== 0,\n                    expression: \"isMaximum && compMax !== 0\",\n                  },\n                ],\n                staticClass:\n                  \"btn qty-btn flex-fill d-flex justify-content-center p-0\",\n                class: {\n                  disabled: _vm.isMaximum || _vm.waiting,\n                  \"btn-appearance\": _vm.useAppearance,\n                },\n                attrs: {\n                  \"data-toggle\": \"tooltip\",\n                  \"data-placement\": \"top\",\n                  \"data-testing\": \"quantity-btn-increase\",\n                  title: _vm.maximumHint,\n                  \"aria-label\": _vm.$translate(\n                    \"Ceres::Template.itemQuantityInputIncrease\"\n                  ),\n                },\n                on: {\n                  click: function ($event) {\n                    return _vm.increaseValue()\n                  },\n                },\n              },\n              [\n                _c(\"i\", {\n                  staticClass: \"fa fa-plus default-float\",\n                  attrs: { \"aria-hidden\": \"true\" },\n                }),\n              ]\n            ),\n            _vm._v(\" \"),\n            _c(\"input\", {\n              ref: \"quantityInputField\",\n              staticClass: \"qty-input text-center\",\n              attrs: {\n                type: \"text\",\n                disabled: _vm.waiting,\n                \"aria-label\": _vm.$translate(\n                  \"Ceres::Template.itemQuantityInput\"\n                ),\n              },\n              domProps: { value: _vm.displayValue },\n              on: {\n                change: function ($event) {\n                  return _vm.setValue($event.target.value)\n                },\n              },\n            }),\n            _vm._v(\" \"),\n            _c(\n              \"button\",\n              {\n                directives: [\n                  {\n                    name: \"tooltip\",\n                    rawName: \"v-tooltip\",\n                    value: _vm.isMinimum && _vm.compMax !== 0,\n                    expression: \"isMinimum && compMax !== 0\",\n                  },\n                ],\n                staticClass:\n                  \"btn qty-btn flex-fill d-flex justify-content-center p-0\",\n                class: {\n                  disabled: _vm.isMinimum || _vm.waiting,\n                  \"btn-appearance\": _vm.useAppearance,\n                },\n                attrs: {\n                  \"data-toggle\": \"tooltip\",\n                  \"data-placement\": \"bottom\",\n                  \"data-testing\": \"quantity-btn-decrease\",\n                  title: _vm.minimumHint,\n                  \"aria-label\": _vm.$translate(\n                    \"Ceres::Template.itemQuantityInputDecrease\"\n                  ),\n                },\n                on: {\n                  click: function ($event) {\n                    return _vm.decreaseValue()\n                  },\n                },\n              },\n              [\n                _c(\"i\", {\n                  staticClass: \"fa fa-minus default-float\",\n                  attrs: { \"aria-hidden\": \"true\" },\n                }),\n              ]\n            ),\n          ]),\n        ]),\n  ])\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","<template>\n  <div class=\"single-item-in\">\n    <div class=\"qty-box d-flex h-100\" v-if=\"compMax !== null\">\n      <b-form-select\n        class=\"qty-input text-center\"\n        v-model=\"compValue\"\n        :options=\"possibleNumbers\"\n        @change=\"setValue($event)\"\n        :disabled=\"waiting\"\n        ref=\"quantityInputField\"\n        :aria-label=\"$translate('Ceres::Template.itemQuantityInput')\"\n      />\n    </div>\n\n    <div class=\"qty-box d-flex h-100\" v-else>\n      <div class=\"qty-btn-container d-flex flex-column\">\n        <button\n          class=\"btn qty-btn flex-fill d-flex justify-content-center p-0\"\n          @click=\"increaseValue()\"\n          :class=\"{\n            disabled: isMaximum || waiting,\n            'btn-appearance': useAppearance,\n          }\"\n          v-tooltip=\"isMaximum && compMax !== 0\"\n          data-toggle=\"tooltip\"\n          data-placement=\"top\"\n          data-testing=\"quantity-btn-increase\"\n          :title=\"maximumHint\"\n          :aria-label=\"$translate('Ceres::Template.itemQuantityInputIncrease')\"\n        >\n          <i class=\"fa fa-plus default-float\" aria-hidden=\"true\"></i>\n        </button>\n        <input\n          class=\"qty-input text-center\"\n          type=\"text\"\n          :value=\"displayValue\"\n          @change=\"setValue($event.target.value)\"\n          :disabled=\"waiting\"\n          ref=\"quantityInputField\"\n          :aria-label=\"$translate('Ceres::Template.itemQuantityInput')\"\n        />\n\n        <button\n          class=\"btn qty-btn flex-fill d-flex justify-content-center p-0\"\n          @click=\"decreaseValue()\"\n          :class=\"{\n            disabled: isMinimum || waiting,\n            'btn-appearance': useAppearance,\n          }\"\n          v-tooltip=\"isMinimum && compMax !== 0\"\n          data-toggle=\"tooltip\"\n          data-placement=\"bottom\"\n          data-testing=\"quantity-btn-decrease\"\n          :title=\"minimumHint\"\n          :aria-label=\"$translate('Ceres::Template.itemQuantityInputDecrease')\"\n        >\n          <i class=\"fa fa-minus default-float\" aria-hidden=\"true\"></i>\n        </button>\n      </div>\n    </div>\n  </div>\n</template>\n  \n  <script>\nimport { floatLength, formatFloat, limit } from \"../../helper/number\";\nimport { defaultValue, isDefined, isNullOrUndefined } from \"../../helper/utils\";\nimport { debounce } from \"../../helper/debounce\";\nimport { mapState } from \"vuex\";\n\nexport default {\n  name: \"quantity-input-single-item\",\n\n  props: {\n    value: {\n      type: Number,\n      required: true,\n    },\n    timeout: {\n      type: Number,\n      required: false,\n      default: 500,\n    },\n    min: {\n      type: Number,\n      required: false,\n      default: 0,\n    },\n    max: {\n      type: Number,\n      required: false,\n    },\n    interval: {\n      type: Number,\n      required: false,\n      default: 1,\n    },\n    waiting: {\n      type: Boolean,\n      required: false,\n    },\n    variationId: {\n      type: Number,\n      required: false,\n    },\n    insideBasket: {\n      type: Boolean,\n      required: false,\n      default: false,\n    },\n    useAppearance: Boolean,\n  },\n\n  data() {\n    return {\n      compValue: this.value,\n      compMin: this.min,\n      compMax: this.max,\n      compInterval: this.interval,\n      compDecimals: 0,\n      onValueChanged: null,\n    };\n  },\n\n  created() {\n    this.compInterval = defaultValue(this.compInterval, 1);\n    this.compInterval = this.compInterval === 0 ? 1 : this.compInterval;\n\n    const minDecimals = floatLength(this.min);\n    const intervalDecimals = floatLength(this.compInterval);\n\n    this.compDecimals = Math.max(minDecimals, intervalDecimals);\n\n    this.onValueChanged = debounce(() => {\n      this.$emit(\"quantity-change\", this.compValue);\n    }, defaultValue(this.timeout, 500));\n\n    if (!isNullOrUndefined(this.variationId)) {\n      this.fetchQuantityFromBasket();\n    }\n  },\n\n  computed: {\n    variationBasketQuantity() {\n      if (isNullOrUndefined(this.variationId)) {\n        return 0;\n      }\n\n      if (\n        this.itemSetVariationId <= 0 ||\n        this.variationId === this.itemSetVariationId\n      ) {\n        const basketObject = this.$store.state.basket.items.find(\n          (variations) => variations.variationId === this.variationId\n        );\n\n        return basketObject ? basketObject.quantity : 0;\n      }\n\n      return 0;\n    },\n\n    isMinimum() {\n      return (\n        isDefined(this.compMin) &&\n        this.compValue - this.compInterval < this.compMin\n      );\n    },\n\n    isMaximum() {\n      return (\n        isDefined(this.compMax) &&\n        this.compValue + this.compInterval > this.compMax\n      );\n    },\n\n    possibleNumbers() {\n      const numbers = [];\n      for (let i = this.compMin; i <= this.compMax; i += this.compInterval) {\n        numbers.push(i);\n      }\n      return numbers;\n    },\n\n    minimumHint() {\n      return this.$translate(\"Ceres::Template.singleItemQuantityMin\", {\n        min: this.$options.filters.numberFormat(this.compMin),\n      });\n    },\n\n    maximumHint() {\n      return this.$translate(\"Ceres::Template.singleItemQuantityMax\", {\n        max: this.$options.filters.numberFormat(this.max),\n      });\n    },\n\n    displayValue() {\n      return this.$options.filters.numberFormat(this.compValue);\n    },\n    possibleNumbers() {\n      const numbers = [];\n      for (let i = this.compMin; i <= this.compMax; i += this.compInterval) {\n        numbers.push(i);\n      }\n      return numbers;\n    },\n\n    itemSetVariationId() {\n      if (this.$store.state.items.itemSetId > 0) {\n        return this.$store.getters[\n          `${this.$store.state.items.itemSetId}/currentItemVariation`\n        ].variation.id;\n      }\n\n      return 0;\n    },\n\n    ...mapState({\n      basketItems: (state) => state.basket.items,\n    }),\n  },\n\n  watch: {\n    variationId(newValue) {\n      if (isDefined(newValue)) {\n        this.fetchQuantityFromBasket();\n      }\n    },\n\n    basketItems: {\n      handler(newValue, oldValue) {\n        if (isDefined(this.variationId)) {\n          this.fetchQuantityFromBasket();\n        }\n      },\n      deep: true,\n    },\n\n    min(newValue) {\n      this.compMin = newValue;\n      this.fetchQuantityFromBasket();\n    },\n\n    max(newValue) {\n      this.compMax = newValue;\n      this.fetchQuantityFromBasket();\n    },\n\n    value(newValue, oldValue) {\n      if (newValue !== oldValue) {\n        this.setValue(newValue);\n      }\n    },\n\n    interval(newInterval) {\n      this.compInterval = defaultValue(newInterval, 1);\n    },\n  },\n\n  methods: {\n    increaseValue() {\n      const newValue = formatFloat(\n        this.compValue + this.compInterval,\n        this.compDecimals\n      );\n\n      if (\n        (isNullOrUndefined(this.compMax) || newValue <= this.compMax) &&\n        !this.waiting\n      ) {\n        this.setValue(newValue);\n      }\n    },\n\n    decreaseValue() {\n      const newValue = formatFloat(\n        this.compValue - this.compInterval,\n        this.compDecimals\n      );\n\n      if (\n        (isNullOrUndefined(this.compMin) || newValue >= this.compMin) &&\n        !this.waiting\n      ) {\n        this.setValue(newValue);\n      }\n    },\n\n    setValue(value) {\n      // consider the configured decimal seperator (if the input is typed in the input field)\n      if (typeof value === \"string\") {\n        value = value.replace(App.decimalSeparator || \",\", \".\");\n      }\n\n      value = parseFloat(value);\n      if (isNaN(value)) {\n        value = defaultValue(this.compMin, 1);\n      }\n\n      // limit new value to min/ max value\n      value = limit(value, this.compMin, this.compMax);\n\n      // make sure, new value is an even multiple of interval\n      let diff;\n      if (this.variationBasketQuantity === 0 && this.min !== 0) {\n        diff = formatFloat(\n          (value - this.min) % this.compInterval,\n          this.compDecimals,\n          true\n        );\n      } else {\n        diff = formatFloat(value % this.compInterval, this.compDecimals, true);\n      }\n\n      if (diff > 0 && diff !== this.compInterval) {\n        if (diff < this.compInterval / 2) {\n          value -= diff;\n        } else {\n          value += this.compInterval - diff;\n        }\n        value = limit(value, this.compMin, this.compMax);\n      }\n\n      // cut fraction\n      value = formatFloat(value, this.compDecimals);\n\n      if (value !== this.compValue) {\n        this.compValue = value;\n        this.onValueChanged();\n      } else if (!isNullOrUndefined(this.$refs.quantityInputField)) {\n        this.$refs.quantityInputField.value = this.displayValue;\n      }\n    },\n\n    fetchQuantityFromBasket() {\n      if (\n        !isNullOrUndefined(this.min) &&\n        this.variationBasketQuantity >= this.min &&\n        this.variationBasketQuantity !== 0\n      ) {\n        // set the minimum value to the interval, if the item is already in the basket\n        this.compMin = this.compInterval;\n      } else if (this.variationBasketQuantity === 0) {\n        // reset the minimum, when item is not in the basket\n        this.compMin = this.min;\n      }\n\n      if (!isNullOrUndefined(this.max)) {\n        // decrease maximum quantity by quantity of variations already in basket\n        this.compMax = this.max - this.variationBasketQuantity;\n\n        if (this.variationBasketQuantity + this.compInterval > this.max) {\n          this.compMin = 0;\n          this.compMax = 0;\n          this.$emit(\"out-of-stock\", true);\n        } else {\n          this.$emit(\"out-of-stock\", false);\n        }\n      } else {\n        this.$emit(\"out-of-stock\", false);\n      }\n\n      this.setValue(this.compMin);\n    },\n  },\n};\n</script>","import mod from \"-!../../../../../../node_modules/babel-loader/lib/index.js!../../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./QuantityInputSingleItem.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../../node_modules/babel-loader/lib/index.js!../../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./QuantityInputSingleItem.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./QuantityInputSingleItem.vue?vue&type=template&id=1d0f9206&\"\nimport script from \"./QuantityInputSingleItem.vue?vue&type=script&lang=js&\"\nexport * from \"./QuantityInputSingleItem.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","<template>\n  <div>\n    <div\n      :class=\"{ 'no-pointer-events': isLoading }\"\n      class=\"add-to-basket-lg-container d-none d-lg-block\"\n      v-if=\"!showQuantity && useLargeScale && canBeAddedToBasket\"\n      v-tooltip\n      data-toggle=\"tooltip\"\n      data-placement=\"top\"\n      :title=\"$translate('Ceres::Template.singleItemAddToBasket')\"\n      @click=\"addToBasket()\"\n    >\n      <icon\n        icon=\"cart-plus\"\n        class=\"fa-lg mobile-icon-right\"\n        :loading=\"isLoading\"\n      ></icon>\n    </div>\n\n    <div\n      class=\"add-to-basket-lg-container d-none d-lg-block\"\n      v-if=\"!showQuantity && useLargeScale && !canBeAddedToBasket\"\n      v-tooltip\n      data-toggle=\"tooltip\"\n      data-placement=\"top\"\n      :title=\"$translate('Ceres::Template.itemShowItem')\"\n      @click=\"directToItem()\"\n    >\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=\"23\"\n        height=\"23\"\n        viewBox=\"0 0 24 24\"\n        fill=\"none\"\n        stroke=\"#ffffff\"\n        stroke-width=\"1.5\"\n        stroke-linecap=\"round\"\n        stroke-linejoin=\"round\"\n      >\n        <path d=\"M5 12h13M12 5l7 7-7 7\" />\n      </svg>\n    </div>\n\n    <div\n      class=\"d-inline\"\n      v-if=\"showQuantity && !useLargeScale\"\n      :class=\"{ 'd-lg-none': !$ceres.isItemView }\"\n    >\n      <div class=\"add-to-basket-container\">\n        <div class=\"quantity-input-container\" v-if=\"!fromSingleItemComp\">\n          <quantity-input\n            :value=\"quantity\"\n            @quantity-change=\"updateQuantity\"\n            @out-of-stock=\"handleButtonState\"\n            :timeout=\"0\"\n            :min=\"minimumQuantity\"\n            :max=\"maximumQuantity\"\n            :interval=\"intervalQuantity\"\n            :variation-id=\"variationId\"\n            :waiting=\"isLoading || !isSalable || !allVariationsSelected\"\n          >\n          </quantity-input>\n        </div>\n        <div class=\"quantity-input-container\" v-else>\n          <quantity-input-single-item\n            :value=\"quantity\"\n            @quantity-change=\"updateQuantity\"\n            @out-of-stock=\"handleButtonState\"\n            :timeout=\"0\"\n            :min=\"minimumQuantity\"\n            :max=\"maximumQuantity\"\n            :interval=\"intervalQuantity\"\n            :variation-id=\"variationId\"\n            :waiting=\"isLoading || !isSalable || !allVariationsSelected\"\n          >\n          </quantity-input-single-item>\n        </div>\n\n        <button\n          v-if=\"!allVariationsSelected || !isSalable\"\n          class=\"btn btn-block btn-primary btn-appearance btn-lg disabled\"\n          v-tooltip\n          data-toggle=\"tooltip\"\n          data-placement=\"top\"\n          :title=\"tooltipText\"\n          :class=\"buttonClasses\"\n          :style=\"paddingInlineStyles\"\n        >\n          <i class=\"fa fa-shopping-cart\" aria-hidden=\"true\"></i>\n          {{ $translate(\"Ceres::Template.singleItemAddToBasket\") }}\n        </button>\n        <button\n          v-else-if=\"!buttonLockState\"\n          :disabled=\"isLoading || !hasPrice\"\n          class=\"btn btn-block btn-primary btn-lg btn-appearance\"\n          @click=\"addToBasket()\"\n          :class=\"buttonClasses\"\n          :style=\"paddingInlineStyles\"\n        >\n          <icon icon=\"shopping-cart\" :loading=\"isLoading\"></icon>\n          {{ $translate(\"Ceres::Template.singleItemAddToBasket\") }}\n        </button>\n        <button\n          v-else\n          class=\"btn btn-block btn-primary btn-lg btn-appearance disabled\"\n          v-tooltip\n          data-toggle=\"tooltip\"\n          data-placement=\"top\"\n          :title=\"\n            'Ceres::Template.singleItemQuantityMax'\n              | translate({ max: maximumQuantity })\n          \"\n          :class=\"buttonClasses\"\n          :style=\"paddingInlineStyles\"\n        >\n          <icon icon=\"shopping-cart\" :waiting=\"isLoading\"></icon>\n          {{ $translate(\"Ceres::Template.singleItemAddToBasket\") }}\n        </button>\n      </div>\n    </div>\n\n    <div\n      class=\"d-inline\"\n      v-if=\"!showQuantity && !useLargeScale\"\n      :class=\"{ 'd-lg-none': !isWishList }\"\n    >\n      <div class=\"btn-group\" role=\"group\" aria-label=\"Thumb Control\">\n        <button\n          type=\"button\"\n          :class=\"{ 'no-pointer-events': isLoading }\"\n          v-if=\"canBeAddedToBasket\"\n          class=\"btn btn-secondary btn-appearance mobile-width-button basket\"\n          @click=\"addToBasket()\"\n        >\n          <img\n            src=\"https://cdn02.plentymarkets.com/ocqgl0v083vy/frontend/website_relaunch/icons/basket_icon.svg\"\n            alt=\"warenkorb\"\n          />\n          {{ $translate(\"Ceres::Template.singleItemAddToBasket\") }}\n        </button>\n        <button\n          type=\"button\"\n          v-else\n          class=\"btn btn-secondary btn-appearance mobile-width-button not-basket\"\n          @click=\"directToItem()\"\n        >\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width=\"23\"\n            height=\"23\"\n            viewBox=\"0 0 24 24\"\n            fill=\"none\"\n            stroke=\"#ffffff\"\n            stroke-width=\"1.5\"\n            stroke-linecap=\"round\"\n            stroke-linejoin=\"round\"\n          >\n            <path d=\"M5 12h13M12 5l7 7-7 7\" />\n          </svg>\n          {{ $translate(\"Ceres::Template.itemShowItem\") }}\n        </button>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport ExceptionMap from \"../../exceptions/ExceptionMap\";\nimport { navigateTo } from \"../../services/UrlService\";\nimport { isNullOrUndefined, isDefined } from \"../../helper/utils\";\nimport { mapState } from \"vuex\";\nimport { ButtonSizePropertyMixin } from \"../../mixins/buttonSizeProperty.mixin\";\nimport QuantityInput from \"../item/QuantityInput.vue\";\nimport QuantityInputSingleItem from \"../item/QuantityInputSingleItem.vue\";\n\nconst NotificationService = require(\"../../services/NotificationService\");\n\nexport default {\n  name: \"add-to-basket\",\n\n  mixins: [ButtonSizePropertyMixin],\n\n  components: {\n    QuantityInput,\n    QuantityInputSingleItem,\n  },\n\n  props: {\n    itemUrl: String,\n    showQuantity: {\n      type: Boolean,\n      default: false,\n    },\n    useLargeScale: {\n      type: Boolean,\n      default: false,\n    },\n    variationId: {\n      type: Number,\n    },\n    isSalable: {\n      type: Boolean,\n      default: false,\n    },\n    hasChildren: {\n      type: Boolean,\n      default: false,\n    },\n    intervalQuantity: {\n      type: Number,\n      default: 1,\n    },\n    minimumQuantity: {\n      type: Number,\n      default: 0,\n    },\n    maximumQuantity: {\n      type: Number,\n      default: null,\n    },\n    orderProperties: {\n      type: Array,\n      default: () => [],\n    },\n    hasOrderProperties: {\n      type: Boolean,\n      default: false,\n    },\n    hasRequiredOrderProperty: {\n      type: Boolean,\n      default: false,\n    },\n    hasPrice: {\n      type: Boolean,\n      default: true,\n    },\n    hasGraduatedPrice: {\n      type: Boolean,\n      default: false,\n    },\n    paddingClasses: {\n      type: String,\n      default: null,\n    },\n    paddingInlineStyles: {\n      type: String,\n      default: null,\n    },\n    isWishList: {\n      type: Boolean,\n      default: false,\n    },\n    propQuantity: {\n      type: Number,\n      default: null,\n    },\n    itemType: {\n      type: String,\n      default: null,\n    },\n    fromSingleItem: {\n      type: Boolean,\n      default: false,\n      required: false,\n    },\n  },\n\n  inject: {\n    itemId: {\n      default: null,\n    },\n  },\n\n  computed: {\n    fromSingleItemComp() {\n      return this.$props.fromSingleItem;\n    },\n    isSet() {\n      return (\n        (this.$store.state.items[this.itemId] &&\n          this.$store.state.items[this.itemId].variation &&\n          this.$store.state.items[this.itemId].variation.documents[0].data.item\n            .itemType === \"set\") ||\n        this.itemType === \"set\"\n      );\n    },\n\n    canBeAddedToBasket() {\n      return (\n        this.isSalable &&\n        !this.hasChildren &&\n        !(this.minimumQuantity != 1 || this.intervalQuantity != 1) &&\n        !this.requiresProperties &&\n        this.hasPrice &&\n        !this.hasGraduatedPrice &&\n        !this.isSet\n      );\n    },\n\n    requiresProperties() {\n      return (\n        (App.config.item.requireOrderProperties &&\n          (this.hasOrderProperties ||\n            this.orderProperties.filter(\n              (property) => property.property.isShownOnItemPage\n            ).length > 0)) ||\n        this.hasRequiredOrderProperty\n      );\n    },\n\n    buttonClasses() {\n      const classes = [];\n\n      if (isDefined(this.buttonSizeClass)) {\n        classes.push(this.buttonSizeClass);\n      }\n\n      if (isDefined(this.paddingClasses)) {\n        classes.push(this.paddingClasses.split(\" \"));\n      }\n\n      return classes;\n    },\n\n    tooltipText() {\n      if (this.hasAvailableVariations) {\n        return this.$translate(\n          \"Ceres::Template.singleItemPleaseSelectValidVariation\"\n        );\n      } else {\n        return this.$translate(\n          \"Ceres::Template.singleItemPleaseSelectNotAvailable\"\n        );\n      }\n    },\n\n    variationOrderQuantity() {\n      return (\n        this.$store.state.items[this.itemId] &&\n        this.$store.state.items[this.itemId].variationOrderQuantity\n      );\n    },\n\n    variationMissingProperties() {\n      return this.$store.getters[`${this.itemId}/variationMissingProperties`];\n    },\n\n    hasAvailableVariations() {\n      return (\n        this.$store.state.items[this.itemId] &&\n        this.$store.state.items[this.itemId].variationSelect &&\n        this.$store.state.items[this.itemId].variationSelect.variations.some(\n          (variation) => variation.isSalable\n        )\n      );\n    },\n\n    allVariationsSelected() {\n      if (this.isSet) {\n        return this.$store.getters[\"itemSetAllVariationSelected\"];\n      } else {\n        // FIX return true if module is not registered. This equals the default value from the module\n        // and is required to use this component in other contexts, e.g. the category view\n        return (\n          !this.$store.state.items[this.itemId] ||\n          (this.$store.state.items[this.itemId].variationSelect &&\n            this.$store.state.items[this.itemId].variationSelect\n              .isVariationSelected)\n        );\n      }\n    },\n\n    isLoading() {\n      return (\n        this.$store.state.items.isAddToBasketLoading === this.variationId ||\n        this.$store.state.items.isSetLoading\n      );\n    },\n\n    ...mapState({\n      basketItems: (state) => state.basket.items,\n      isBasketLoading: (state) => state.basket.isBasketLoading,\n    }),\n  },\n\n  data() {\n    return {\n      quantity: 1,\n      buttonLockState: false,\n    };\n  },\n\n  methods: {\n    /**\n     * add an item to basket-resource\n     */\n    addToBasket() {\n      this.$store.dispatch(\"loadComponent\", \"add-item-to-basket-overlay\");\n      this.$store.dispatch(\"loadComponent\", \"basket-preview\");\n\n      if (\n        this.variationMissingProperties !== undefined &&\n        this.variationMissingProperties.length\n      ) {\n        this.showMissingPropertiesError();\n      } else if (this.isSalable || this.isSet) {\n        this.$store.commit(\"setIsAddToBasketLoading\", this.variationId);\n\n        const orderParamsAndSurcharge = extractPropertiesAndSurcharge(\n          this.orderProperties\n        );\n\n        const basketObject = {\n          variationId: this.variationId,\n          quantity: this.quantity,\n          basketItemOrderParams: orderParamsAndSurcharge.orderParams,\n          totalOrderParamsMarkup: orderParamsAndSurcharge.totalSurcharge,\n        };\n\n        if (this.isSet) {\n          const setComponents = [];\n          this.$store.state.items.setComponentIds.forEach((itemId) => {\n            const setComponent =\n              this.$store.getters[`${itemId}/currentItemVariation`];\n\n            const variationId = setComponent && setComponent.variation.id;\n\n            // Extract order properties and total surcharge for set components\n            const setComponentOrderParamsAndSurcharge =\n              extractPropertiesAndSurcharge(\n                setComponent.properties.filter(\n                  (prop) => prop.property.isOderProperty\n                )\n              );\n\n            setComponents.push({\n              variationId: variationId,\n              quantity: this.$store.state.items[itemId].variationOrderQuantity,\n              basketItemOrderParams:\n                setComponentOrderParamsAndSurcharge.orderParams,\n              totalOrderParamsMarkup:\n                setComponentOrderParamsAndSurcharge.totalSurcharge,\n            });\n          });\n          basketObject.setComponents = setComponents;\n        }\n\n        this.$store.dispatch(\"addBasketItem\", basketObject).then(\n          (response) => {\n            document.dispatchEvent(\n              new CustomEvent(\"afterBasketItemAdded\", { detail: basketObject })\n            );\n            this.$store.commit(\"setIsAddToBasketLoading\", 0);\n          },\n          (error) => {\n            this.$store.commit(\"setIsAddToBasketLoading\", 0);\n\n            if (error.data) {\n              NotificationService.error(\n                this.$translate(\n                  \"Ceres::Template.\" +\n                    ExceptionMap.get(error.data.exceptionCode.toString()),\n                  error.data.placeholder\n                )\n              ).closeAfter(5000);\n            }\n          }\n        );\n      }\n    },\n    showMissingPropertiesError() {\n      this.$store.commit(`${this.itemId}/setVariationMarkInvalidProps`, true);\n\n      const propertyNames = this.variationMissingProperties.map(\n        (property) => property.property.names.name\n      );\n      let errorMsgContent = \"\";\n\n      for (const name of propertyNames) {\n        errorMsgContent += name + \"<br>\";\n      }\n\n      NotificationService.error(\n        this.$translate(\n          \"Ceres::Template.singleItemMissingOrderPropertiesError\"\n        ).replace(\"<properties>\", errorMsgContent)\n      );\n    },\n\n    directToItem() {\n      navigateTo(this.itemUrl);\n    },\n\n    handleButtonState(value) {\n      this.buttonLockState = value;\n    },\n\n    /**\n     * update the property quantity of the current instance\n     * @param value\n     */\n    updateQuantity(value) {\n      this.quantity = value;\n    },\n  },\n\n  watch: {\n    quantity(value) {\n      if (!isNullOrUndefined(this.itemId)) {\n        this.$store.commit(`${this.itemId}/setVariationOrderQuantity`, value);\n        this.$store.commit(\n          `${this.itemId}/setVariationPropertySurcharges`,\n          this.$store.getters[`${this.itemId}/variationBasePrice`]\n        );\n      }\n    },\n\n    variationOrderQuantity(value) {\n      if (this.quantity !== value) {\n        this.quantity = value;\n      }\n    },\n\n    propQuantity(value) {\n      if (!isNaN(value)) {\n        this.quantity = value;\n      }\n    },\n  },\n};\n\nfunction extractPropertiesAndSurcharge(orderProperties) {\n  let totalSurcharge = 0;\n  const orderParams = [];\n\n  orderProperties.forEach((orderProperty) => {\n    if (!isNullOrUndefined(orderProperty.property.value)) {\n      const property = orderProperty.property;\n\n      if (\n        property.valueType === \"float\" &&\n        !isNullOrUndefined(property.value) &&\n        property.value.slice(-1) === App.decimalSeparator\n      ) {\n        property.value = property.value.substr(0, property.value.length - 1);\n      }\n\n      totalSurcharge +=\n        (orderProperty.surcharge || 0) + (property.surcharge || 0);\n\n      orderParams.push({\n        propertyId: property.id,\n        type: property.valueType,\n        name: property.names.name,\n        value: property.value,\n      });\n    }\n  });\n\n  return {\n    orderParams: orderParams,\n    totalSurcharge: totalSurcharge,\n  };\n}\n</script>\n","import mod from \"-!../../../../../../node_modules/babel-loader/lib/index.js!../../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./AddToBasket.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../../node_modules/babel-loader/lib/index.js!../../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./AddToBasket.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./AddToBasket.vue?vue&type=template&id=1c52e1e1&\"\nimport script from \"./AddToBasket.vue?vue&type=script&lang=js&\"\nexport * from \"./AddToBasket.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}